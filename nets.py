import gsipn as pn

def create1oo1(params):
	net = pn.GSIPN()
	net.add_place('w',1)
	net.add_place('d',0)
	net.add_place('r',0)
	net.add_place('u',0)
	net.add_place('ru',0)
	net.add_place('A',1)
	net.add_place('U',0)
	net.add_transition('t0',t_class='exp',rate=params['lambda_dd'],assertion='c = not c')
	net.add_transition('t1',predicate='r>0',assertion='r-=1')
	net.add_transition('t2',t_class='exp',rate=params['mu_dd'],assertion='r+=1\nc = not c')
	net.add_transition('t3',t_class='exp',rate=params['lambda_d'], predicate = 'not c')
	net.add_transition('t4',t_class='exp',rate=params['mu_d'],predicate = 'c')
	net.add_inArc('w','t0')
	net.add_outArc('d','t0')
	net.add_inArc('d','t1')
	net.add_outArc('r','t1')
	net.add_inArc('r','t2')
	net.add_outArc('w','t2')
	net.add_inArc('A','t3')
	net.add_outArc('U','t3')
	net.add_inArc('U','t4')
	net.add_outArc('A','t4')
	net.add_varible('c',True)
	net.add_varible('r',1)
	return net

def create1oo2(params):
	net = pn.GSIPN()
	net.add_place('w1',1)
	net.add_place('d1',0)
	net.add_place('r1',0)
	net.add_place('u1',0)
	net.add_place('ur1',0)
	net.add_place('w2',1)
	net.add_place('d2',0)
	net.add_place('r2',0)
	net.add_place('u2',0)
	net.add_place('ur2',0)
	net.add_place('A',1)
	net.add_place('U',0)
	net.add_transition('t0',t_class='exp',rate=params['lambda_dd'],assertion='c1 = not c1')
	net.add_transition('t1',predicate='r>0',assertion='r-=1')
	net.add_transition('t2',t_class='exp',rate=params['mu_dd'],assertion='r+=1\nc1 = not c1')
	net.add_transition('t3',t_class='exp',rate=params['lambda_du'],assertion='c1 = not c1')
	net.add_transition('t4',predicate='r>0',assertion='r-=1')
	net.add_transition('t5',t_class='exp',rate=params['mu_du'],assertion='r+=1\nc1 = not c1')
	net.add_transition('t6',t_class='exp',rate=params['lambda_dd'],assertion='c2 = not c2')
	net.add_transition('t7',predicate='r>0',assertion='r-=1')
	net.add_transition('t8',t_class='exp',rate=params['mu_dd'],assertion='r+=1\nc2 = not c2')
	net.add_transition('t9',t_class='exp',rate=params['lambda_du'],assertion='c2 = not c2')
	net.add_transition('t10',predicate='r>0',assertion='r-=1')
	net.add_transition('t11',t_class='exp',rate=params['mu_du'],assertion='r+=1\nc2 = not c2')
	net.add_transition('t12',t_class='exp',rate=params['lambda_d'], predicate = 'not (c1 or c2)')
	net.add_transition('t13',t_class='exp',rate=params['mu_d'],predicate = 'c1 or c2')
	net.add_inArc('w1','t0')
	net.add_outArc('d1','t0')
	net.add_inArc('d1','t1')
	net.add_outArc('r1','t1')
	net.add_inArc('r1','t2')
	net.add_outArc('w1','t2')
	net.add_inArc('w1','t3')
	net.add_outArc('u1','t3')
	net.add_inArc('u1','t4')
	net.add_outArc('ur1','t4')
	net.add_inArc('ur1','t5')
	net.add_outArc('w1','t5')
	net.add_inArc('w2','t6')
	net.add_outArc('d2','t6')
	net.add_inArc('d2','t7')
	net.add_outArc('r2','t7')
	net.add_inArc('r2','t8')
	net.add_outArc('w2','t8')
	net.add_inArc('w2','t9')
	net.add_outArc('u2','t9')
	net.add_inArc('u2','t10')
	net.add_outArc('ur2','t10')
	net.add_inArc('ur2','t11')
	net.add_outArc('w2','t11')
	net.add_inArc('A','t12')
	net.add_outArc('U','t12')
	net.add_inArc('U','t13')
	net.add_outArc('A','t13')
	net.add_varible('c1',True)
	net.add_varible('c2',True)
	net.add_varible('r',2)
	return net

def create2oo3(params):
	net = pn.GSIPN()
	net.add_place('w1',1)
	net.add_place('d1',0)
	net.add_place('r1',0)
	net.add_place('u1',0)
	net.add_place('ur1',0)
	net.add_place('w2',1)
	net.add_place('d2',0)
	net.add_place('r2',0)
	net.add_place('u2',0)
	net.add_place('ur2',0)
	net.add_place('w3',1)
	net.add_place('d3',0)
	net.add_place('r3',0)
	net.add_place('u3',0)
	net.add_place('ur3',0)
	net.add_place('A',1)
	net.add_place('U',0)
	net.add_transition('t0',t_class='exp',rate=params['lambda_dd'],assertion='c1 = not c1')
	net.add_transition('t1',predicate='r>0',assertion='r-=1')
	net.add_transition('t2',t_class='exp',rate=params['mu_dd'],assertion='r+=1\nc1 = not c1')
	net.add_transition('t3',t_class='exp',rate=params['lambda_du'],assertion='c1 = not c1')
	net.add_transition('t4',predicate='r>0',assertion='r-=1')
	net.add_transition('t5',t_class='exp',rate=params['mu_du'],assertion='r+=1\nc1 = not c1')
	net.add_transition('t6',t_class='exp',rate=params['lambda_dd'],assertion='c2 = not c2')
	net.add_transition('t7',predicate='r>0',assertion='r-=1')
	net.add_transition('t8',t_class='exp',rate=params['mu_dd'],assertion='r+=1\nc2 = not c2')
	net.add_transition('t9',t_class='exp',rate=params['lambda_du'],assertion='c2 = not c2')
	net.add_transition('t10',predicate='r>0',assertion='r-=1')
	net.add_transition('t11',t_class='exp',rate=params['mu_du'],assertion='r+=1\nc2 = not c2')
	net.add_transition('t12',t_class='exp',rate=params['lambda_dd'],assertion='c3 = not c3')
	net.add_transition('t13',predicate='r>0',assertion='r-=1')
	net.add_transition('t14',t_class='exp',rate=params['mu_dd'],assertion='r+=1\nc3 = not c3')
	net.add_transition('t15',t_class='exp',rate=params['lambda_du'],assertion='c3 = not c3')
	net.add_transition('t16',predicate='r>0',assertion='r-=1')
	net.add_transition('t17',t_class='exp',rate=params['mu_du'],assertion='r+=1\nc3 = not c3')
	net.add_transition('t18',t_class='exp',rate=params['lambda_d'], predicate = 'not ((c1 and c2) or (c1 and c3) or (c2 and c3))')
	net.add_transition('t19',t_class='exp',rate=params['mu_d'],predicate = '(c1 and c2) or (c1 and c3) or (c2 and c3)')
	net.add_inArc('w1','t0')
	net.add_outArc('d1','t0')
	net.add_inArc('d1','t1')
	net.add_outArc('r1','t1')
	net.add_inArc('r1','t2')
	net.add_outArc('w1','t2')
	net.add_inArc('w1','t3')
	net.add_outArc('u1','t3')
	net.add_inArc('u1','t4')
	net.add_outArc('ur1','t4')
	net.add_inArc('ur1','t5')
	net.add_outArc('w1','t5')
	net.add_inArc('w2','t6')
	net.add_outArc('d2','t6')
	net.add_inArc('d2','t7')
	net.add_outArc('r2','t7')
	net.add_inArc('r2','t8')
	net.add_outArc('w2','t8')
	net.add_inArc('w2','t9')
	net.add_outArc('u2','t9')
	net.add_inArc('u2','t10')
	net.add_outArc('ur2','t10')
	net.add_inArc('ur2','t11')
	net.add_outArc('w2','t11')
	net.add_inArc('w3','t12')
	net.add_outArc('d3','t12')
	net.add_inArc('d3','t13')
	net.add_outArc('r3','t13')
	net.add_inArc('r3','t14')
	net.add_outArc('w3','t14')
	net.add_inArc('w1','t15')
	net.add_outArc('u3','t15')
	net.add_inArc('u3','t16')
	net.add_outArc('ur3','t16')
	net.add_inArc('ur3','t17')
	net.add_outArc('w3','t17')
	net.add_inArc('A','t18')
	net.add_outArc('U','t18')
	net.add_inArc('U','t19')
	net.add_outArc('A','t19')
	net.add_varible('c1',True)
	net.add_varible('c2',True)
	net.add_varible('c3',True)
	net.add_varible('r',3)
	return net